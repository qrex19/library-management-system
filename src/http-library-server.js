const express = require("express");
const app = express();
const port = 3000;
const bodyParser = require("body-parser");
app.use(bodyParser.json());

/**
 * functionalities:
 * - add a book(title, description, issueStatus, author)!(post) ✔️
 * - generate a bookId associated to every book stored!(functionality)
 * - remove a book!(delete)
 * - change book's issue status!(put)
 * - retrieve all the books informations(get) ✔️
 * - retrieve all book's of an author in the library(get)
 */

//dataBase
let books = [
  //   {
  //     title: "the book of Gods",
  //     description: "A tale of Gods",
  //     issueStatus: false,
  //     author: "arundhati roy",
  //     id: 1,
  //   },
  //   {
  //     title: "abra ka dabra",
  //     description: "the dabra the abra",
  //     issueStatus: false,
  //     author: "nishant jha",
  //     id: 2,
  //   },
  //   {
  //     title: "The one Show",
  //     description: "The show must go on",
  //     issueStatus: false,
  //     author: "Arsh Kasid",
  //     id: 3,
  //   },
];

function bookObjCon(title, description, issueStatus, authorName) {
  const id = books.length + 1;
  return { title, description, issueStatus, authorName, id };
}

app.post("/", (req, res) => {
  const title = req.body.title;
  const description = req.body.description;
  const authorName = req.body.author;

  //issueStatus is false by default, can be changed later by the client!
  //bookID is autogenerated by the construrctor itself!
  const newBook = bookObjCon(title, description, false, authorName);
  books.push(newBook);

  //status code that confirms that the request was successful, a new resource was created.
  res.sendStatus(201);
});

app.get("/", (req, res) => {
  res.json(books);
});

app.put("/", (req, res) => {
  //should take a bookID to change the status
  const id = req.body.id;
  const newStatus = req.body.status;
  const index = id - 1; //the index is 1 less than id!
  books[index].issueStatus = newStatus;
  res.sendStatus(200);
});

app.listen(port, () => {
  console.log(`Server listening on port: ${port}`);
});
